# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import detection_server_pb2 as detection__server__pb2


class DetectionServerStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetDetectedObjects = channel.unary_unary(
                '/detection_server.DetectionServer/GetDetectedObjects',
                request_serializer=detection__server__pb2.DesiredLabels.SerializeToString,
                response_deserializer=detection__server__pb2.DetectedObjectData.FromString,
                )
        self.GetCameraResolution = channel.unary_unary(
                '/detection_server.DetectionServer/GetCameraResolution',
                request_serializer=detection__server__pb2.Empty.SerializeToString,
                response_deserializer=detection__server__pb2.CameraResolution.FromString,
                )
        self.GetCameraIntrinsicParameters = channel.unary_unary(
                '/detection_server.DetectionServer/GetCameraIntrinsicParameters',
                request_serializer=detection__server__pb2.Empty.SerializeToString,
                response_deserializer=detection__server__pb2.CameraIntrinsicParameters.FromString,
                )


class DetectionServerServicer(object):
    """Missing associated documentation comment in .proto file"""

    def GetDetectedObjects(self, request, context):
        """A simple RPC. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCameraResolution(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCameraIntrinsicParameters(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DetectionServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetDetectedObjects': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDetectedObjects,
                    request_deserializer=detection__server__pb2.DesiredLabels.FromString,
                    response_serializer=detection__server__pb2.DetectedObjectData.SerializeToString,
            ),
            'GetCameraResolution': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCameraResolution,
                    request_deserializer=detection__server__pb2.Empty.FromString,
                    response_serializer=detection__server__pb2.CameraResolution.SerializeToString,
            ),
            'GetCameraIntrinsicParameters': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCameraIntrinsicParameters,
                    request_deserializer=detection__server__pb2.Empty.FromString,
                    response_serializer=detection__server__pb2.CameraIntrinsicParameters.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'detection_server.DetectionServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DetectionServer(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def GetDetectedObjects(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/detection_server.DetectionServer/GetDetectedObjects',
            detection__server__pb2.DesiredLabels.SerializeToString,
            detection__server__pb2.DetectedObjectData.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCameraResolution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/detection_server.DetectionServer/GetCameraResolution',
            detection__server__pb2.Empty.SerializeToString,
            detection__server__pb2.CameraResolution.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCameraIntrinsicParameters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/detection_server.DetectionServer/GetCameraIntrinsicParameters',
            detection__server__pb2.Empty.SerializeToString,
            detection__server__pb2.CameraIntrinsicParameters.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
